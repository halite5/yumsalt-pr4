{"version":3,"sources":["comp/Tab.js","comp/TabList.js","comp/PageBody.js","comp/MediaHost.js","comp/Previewer.js","pages/TextPage.js","pages/ImagePage.js","pages/VideoPage.js","pages/TablePage.js","pages/EmailPage.js","App.js","reportWebVitals.js","index.js"],"names":["Tab","name","isActive","onSelected","cl","href","className","onClick","TabList","tabInfo","activeTab","tabs","map","t","PageBody","content","previewer","clonedEl","React","cloneElement","MediaHost","mediaUrl","onDismiss","handleClickOutside","console","log","host","endsWith","src","controls","clOutCfg","onClickOutside","Previewer","isOpen","id","TextPage","onSubmit","type","value","htmlFor","ImagePage","imClicked","e","target","process","alt","VideoPage","viClicked","TablePage","EmailPage","formSubmit","email","state","status","test","msg","setState","state$","this","$value","LinkedComponent","App","onTabSelected","tabName","openPreviewer","item","previewUrl","previewOpen","closePreviewer","onScroll","root","document","documentElement","maxScroll","scrollHeight","clientHeight","bttVis","scrollTop","bttVisible","body","window","addEventListener","removeEventListener","find","x","page","getTab","btt","class","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sQAUeA,MARf,YAA4C,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,WACtBC,EAAKF,EAAW,SAAW,GAE/B,OACI,mBAAGG,KAAK,IAAIC,UAAWF,EAAIG,QAASJ,EAApC,SAAiDF,KCY1CO,MAdf,YAAsD,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,UAAWP,EAAc,EAAdA,WAC/BQ,EAAOF,EAAQG,KAAI,SAAAC,GAAC,OACpB,cAAC,EAAD,CAAkBZ,KAAMY,EAAEZ,KAAMC,SAAUQ,IAAcG,EAAEZ,KAAME,WAAY,kBAAMA,EAAWU,EAAEZ,QAArFY,EAAEZ,SAGhB,OACI,8BAEQU,KCVD,SAASG,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,UACnCC,EAAWC,IAAMC,aAAaJ,EAAS,CACvCC,UAAWA,IAGf,OACI,8BACKC,I,YCPb,SAASG,EAAT,GAA6C,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAC3BF,EAAUG,mBAAqB,WAC3BC,QAAQC,IAAI,mBACZH,KAGJ,IAEII,IAFYL,EAASM,SAAS,SAAWN,EAASM,SAAS,SAGzD,qBAAKC,IAAKP,EAAUf,UAAU,iBAC9B,uBAAOsB,IAAKP,EAAUf,UAAU,eAAeuB,UAAQ,IAE7D,OACI,8BACMH,IAKd,IAAMI,EAAW,CACbP,mBAAoB,kBAAMH,EAAUG,qBAGzBQ,cAAeX,EAAWU,GCV1BE,MAZf,YAAqD,IAAhCX,EAA+B,EAA/BA,SAAUY,EAAqB,EAArBA,OAAQX,EAAa,EAAbA,UAGnC,OAFAE,QAAQC,IAAI,sBAAuBQ,GAE9BA,EAGD,uBAAOC,GAAG,UAAU5B,UAAU,UAA9B,SACI,cAAC,EAAD,CAAWe,SAAUA,EAAUC,UAAWA,MAJ7B,2BCJV,SAASa,IACpB,OACI,kCACI,uBAAMC,SAAU,aAAhB,UACI,qCACI,2DACA,uDACI,uBAAOC,KAAK,OAAOpC,KAAK,YAG5B,uBACA,wEACA,uBACA,uBAAOoC,KAAK,QAAQH,GAAG,YAAYjC,KAAK,UAAUqC,MAAM,UACxD,uBAAOC,QAAQ,YAAf,wBAA6C,uBAC7C,uBAAOF,KAAK,QAAQH,GAAG,UAAUjC,KAAK,UAAUqC,MAAM,QACtD,uBAAOC,QAAQ,UAAf,sBAAyC,uBACzC,uBAAOF,KAAK,QAAQH,GAAG,WAAWjC,KAAK,UAAUqC,MAAM,SACvD,uBAAOC,QAAQ,WAAf,0BAEJ,uBAAOF,KAAK,SAASC,MAAM,gBCnB5B,SAASE,EAAT,GAAiC,IAAbxB,EAAY,EAAZA,UAC7ByB,EAAY,SAACC,GACf1B,EAAU0B,EAAEC,OAAOf,MAGrB,OACE,oCACE,sBAAKtB,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBAAKsB,IAAKgB,+BAA2CC,IAAI,aAAatC,QAASkC,IAC/E,wDAEF,yBAAQnC,UAAU,kBAAlB,UACE,qBAAKsB,IAAKgB,6BAAyCC,IAAI,WAAWtC,QAASkC,IAC3E,sDAEF,yBAAQnC,UAAU,kBAAlB,UACE,qBAAKsB,IAAKgB,8BAA0CC,IAAI,YAAYtC,QAASkC,IAC7E,iEAEF,yBAAQnC,UAAU,kBAAlB,UACE,qBAAKsB,IAAKgB,gCAA4CC,IAAI,cAActC,QAASkC,IACjF,yDAEF,yBAAQnC,UAAU,kBAAlB,UACE,qBAAKsB,IAAKgB,+BAA2CC,IAAI,aAAatC,QAASkC,IAC/E,wDAEF,yBAAQnC,UAAU,kBAAlB,UACE,qBAAKsB,IAAKgB,8BAA0CC,IAAI,YAAYtC,QAASkC,IAC7E,uDAEF,yBAAQnC,UAAU,kBAAlB,UACE,qBAAKsB,IAAKgB,sCAAkDC,IAAI,gBAAgBtC,QAASkC,IACzF,+DAEF,yBAAQnC,UAAU,kBAAlB,UACE,qBAAKsB,IAAKgB,+BAA2CC,IAAI,aAAatC,QAASkC,IAC/E,2DAGJ,uDACwB,mBAAGpC,KAAK,4CAAR,yBADxB,UC1CS,SAASyC,EAAT,GAAmC,IAAd9B,EAAa,EAAbA,UAC5B+B,EAAY,SAACL,GACb1B,EAAU0B,EAAEC,OAAOf,MAGvB,OACI,oCACI,sBAAKtB,UAAU,aAAf,UACI,yBAAQA,UAAU,kBAAlB,UACI,uBAAOsB,IAAKgB,mCAA+CrC,QAASwC,IACpE,4DAEJ,yBAAQzC,UAAU,kBAAlB,UACI,uBAAOsB,IAAKgB,oCAAgDrC,QAASwC,IACrE,wDAEJ,yBAAQzC,UAAU,kBAAlB,UACI,uBAAOsB,IAAKgB,uCAAmDrC,QAASwC,IACxE,8DAGR,+CAEN,+BACc,6BACI,mBAAG1C,KAAK,8CAAR,6DAGJ,6BACI,mBAAGA,KAAK,8CAAR,yDAGJ,6BACI,mBAAGA,KAAK,8CAAR,qECjCT,SAAS2C,IACpB,OACI,oCACI,gCACI,kCACI,+BACI,6BAAI,4CACJ,6BAAI,0CACJ,6BAAI,kDAER,+BACI,6BAAI,mBAAG3C,KAAK,iDAAR,0BACJ,4IAEA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,yCAAR,wBACJ,+IAEA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,+CAAR,mCACJ,iPAGA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,iDAAR,0BACJ,4IAEA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,yCAAR,wBACJ,+IAEA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,+CAAR,mCACJ,iPAGA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,iDAAR,0BACJ,4IAEA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,yCAAR,wBACJ,+IAEA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,+CAAR,mCACJ,iPAGA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,iDAAR,0BACJ,4IAEA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,yCAAR,wBACJ,+IAEA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,+CAAR,mCACJ,iPAGA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,iDAAR,0BACJ,4IAEA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,yCAAR,wBACJ,+IAEA,mEAEJ,+BACI,6BAAI,mBAAGA,KAAK,+CAAR,mCACJ,iPAGA,wEAIZ,+DACkC,mBAAGA,KAAK,4CAAR,yBADlC,U,mBCxDG4C,EAjDf,kDACI,aAAe,IAAD,8BACV,gBAQJC,WAAa,WACT,IAKIC,EAAQ,EAAKC,MAAMD,MACnBE,EALS,eACCC,KAIcH,GAC5B3B,QAAQC,IAAI,aAAc4B,EAAQ,MAAOF,GAEzC,IAAII,EAAMF,EAAS,8BAAgC,wBACnD,EAAKG,SAAS,CACVH,OAAQE,KAlBZ,EAAKH,MAAQ,CACTD,MAAO,GACPE,OAAQ,IALF,EADlB,0CA0BI,WACI,IAAMI,EAASC,KAAKD,SAEpB,OACI,oCACI,0FAGA,uBAAMnD,UAAU,aAAa8B,SAAUsB,KAAKR,WAA5C,UACI,qCACI,2DACA,wDACZ,cAAC,QAAD,CAAOb,KAAK,OAAOsB,OAAQF,EAAON,cAG1B,uBAAOd,KAAK,SAASC,MAAM,WAC3B,sBAAMJ,GAAG,oBAAT,SAA8BwB,KAAKN,MAAMC,mBA1C7D,GAA+BO,mBCmHhBC,EA3Gf,kDACE,aAAe,IAAD,uBACZ,gBA0CFC,cAAgB,SAACC,GACfvC,QAAQC,IAAR,wBAA6BsC,IAC7B,EAAKP,SAAS,CACZ9C,UAAWqD,KA9CD,EAkDdC,cAAgB,SAACC,GACfzC,QAAQC,IAAR,0BAA+BwC,IAC/B,EAAKT,SAAS,CACZU,WAAYD,EACZE,aAAa,KAtDH,EA0DdC,eAAiB,WACf5C,QAAQC,IAAI,mBACZ,EAAK+B,SAAS,CACZU,WAAY,KACZC,aAAa,KA9DH,EAsEdE,SAAW,WACT,IAAIC,EAAOC,SAASC,gBAChBC,EAAYH,EAAKI,aAAeJ,EAAKK,aAIrCC,GAAS,EAFAN,EAAKO,UAGLJ,EAAY,MACvBG,GAAS,GAGX,EAAKpB,SAAS,CACZsB,WAAYF,KA/Ed,IAAIjE,EAAO,CACT,CACEV,KAAM,OACN8E,KAAM,cAAC5C,EAAD,KAER,CACElC,KAAM,QACN8E,KAAM,cAACvC,EAAD,KAER,CACEvC,KAAM,QACN8E,KAAM,cAACjC,EAAD,KAER,CACE7C,KAAM,QACN8E,KAAM,cAAC/B,EAAD,KAER,CACE/C,KAAM,QACN8E,KAAM,cAAC,EAAD,MAtBE,OA0BZ,EAAK3B,MAAQ,CACX3C,QAASE,EACTD,UAAWC,EAAK,GAAGV,KACnBiE,WAAY,GACZC,aAAa,EACbW,YAAY,GA/BF,EADhB,qDAoCE,WACEE,OAAOC,iBAAiB,SAAUvB,KAAKW,YArC3C,kCAwCE,WACEW,OAAOE,oBAAoB,SAAUxB,KAAKW,YAzC9C,oBAmEE,SAAOpE,GACL,OAAOyD,KAAKN,MAAM3C,QAAQ0E,MAAK,SAAAC,GAAC,OAAIA,EAAEnF,OAASA,OApEnD,oBAuFE,WACE,IAAIoF,EAAO3B,KAAK4B,OAAO5B,KAAKN,MAAM1C,WAE9B6E,EAAO,uBAAOC,MAAM,MAAb,SACT,mBAAGnF,KAAK,IAAIE,QAAS,kBAAMgE,SAASC,gBAAgBK,UAAY,GAAhE,mBAEF,OACE,sBAAKvE,UAAU,MAAf,UAEE,cAAC,EAAD,CAASG,QAASiD,KAAKN,MAAM3C,QAASC,UAAWgD,KAAKN,MAAM1C,UAAWP,WAAYuD,KAAKI,gBACxF,cAAChD,EAAD,CAAUC,QAASsE,EAAKN,KAAM/D,UAAW0C,KAAKM,gBAC9C,cAAC,EAAD,CAAW3C,SAAUqC,KAAKN,MAAMc,WAAYjC,OAAQyB,KAAKN,MAAMe,YAAa7C,UAAWoC,KAAKU,iBAC1FV,KAAKN,MAAM0B,YACXS,SApGV,GAAyBE,aCAVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,SAM1BZ,M","file":"static/js/main.49858bb1.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Tab({name, isActive, onSelected}) {\n    let cl = isActive ? 'active' : ''\n\n    return (\n        <a href=\"#\" className={cl} onClick={onSelected}>{name}</a>\n    )\n}\n\nexport default Tab\n","import React from 'react'\nimport './TabList.css'\nimport Tab from './Tab';\n\nfunction TabList({ tabInfo, activeTab, onSelected }) {\n    let tabs = tabInfo.map(t =>\n        <Tab key={t.name} name={t.name} isActive={activeTab === t.name} onSelected={() => onSelected(t.name)} />\n    )\n\n    return (\n        <nav>\n            {\n                tabs\n            }\n        </nav>\n    )\n}\n\nexport default TabList\n","import React from 'react'\n\nexport default function PageBody({content, previewer}) {\n    var clonedEl = React.cloneElement(content, {\n        previewer: previewer\n    })\n\n    return (\n        <div>\n            {clonedEl}\n        </div>\n    )\n}\n","import onClickOutside from \"react-onclickoutside\"\n\nfunction MediaHost({ mediaUrl, onDismiss }) {\n    MediaHost.handleClickOutside = () => {\n        console.log('clicked outside')\n        onDismiss()\n    }\n\n    let isImage = !(mediaUrl.endsWith('.mp4') || mediaUrl.endsWith('.m4v'))\n\n    let host = isImage\n        ? <img src={mediaUrl} className=\"super-center\" />\n        : <video src={mediaUrl} className=\"super-center\" controls />\n\n    return (\n        <div>\n            { host }\n        </div>\n    )\n}\n\nconst clOutCfg = {\n    handleClickOutside: () => MediaHost.handleClickOutside\n}\n\nexport default onClickOutside(MediaHost, clOutCfg)","import React, { useState } from 'react'\nimport MediaHost from './MediaHost'\n\nfunction Previewer({ mediaUrl, isOpen, onDismiss }) {\n    console.log('is previewer open?:', isOpen)\n\n    if (!isOpen) return (<aside />)\n\n    return (\n        <aside id=\"overlay\" className=\"overlay\">\n            <MediaHost mediaUrl={mediaUrl} onDismiss={onDismiss} />\n        </aside>\n    )\n}\n\nexport default Previewer\n","import React from 'react'\n\nexport default function TextPage() {\n    return (\n        <section>\n            <form onSubmit={() => {}}>\n                <fieldset>\n                    <legend>how do you like salt?</legend>\n                    <label>what is your name?\n                        <input type=\"text\" name=\"name\" />\n                    </label>\n\n                    <br />\n                    <label>what is your favorite type of salt?</label>\n                    <br />\n                    <input type=\"radio\" id=\"tablesalt\" name=\"favsalt\" value=\"table\" />\n                    <label htmlFor=\"tablesalt\">table salt</label><br />\n                    <input type=\"radio\" id=\"seasalt\" name=\"favsalt\" value=\"sea\" />\n                    <label htmlFor=\"seasalt\">sea salt</label><br />\n                    <input type=\"radio\" id=\"pinksalt\" name=\"favsalt\" value=\"pink\" />\n                    <label htmlFor=\"pinksalt\">pink salt</label>\n                </fieldset>\n                <input type=\"submit\" value=\"submit\"  />\n            </form>\n        </section>\n    )\n}\n","import React from 'react'\n\n\nexport default function ImagePage({previewer}) {\n  let imClicked = (e) => {\n    previewer(e.target.src)\n  }\n\n  return (\n    <section>\n      <div className=\"image-grid\">\n        <figure className=\"media-grid-item\">\n          <img src={process.env.PUBLIC_URL + \"/img/table.jpg\"} alt=\"table salt\" onClick={imClicked} />\n          <figcaption>table salt.</figcaption>\n        </figure>\n        <figure className=\"media-grid-item\">\n          <img src={process.env.PUBLIC_URL + \"/img/sea.jpg\"} alt=\"sea salt\" onClick={imClicked} />\n          <figcaption>sea salt.</figcaption>\n        </figure>\n        <figure className=\"media-grid-item\">\n          <img src={process.env.PUBLIC_URL + \"/img/pink.jpg\"} alt=\"pink salt\" onClick={imClicked} />\n          <figcaption>himalayan pink salt.</figcaption>\n        </figure>\n        <figure className=\"media-grid-item\">\n          <img src={process.env.PUBLIC_URL + \"/img/kosher.jpg\"} alt=\"kosher salt\" onClick={imClicked} />\n          <figcaption>kosher salt.</figcaption>\n        </figure>\n        <figure className=\"media-grid-item\">\n          <img src={process.env.PUBLIC_URL + \"/img/flake.jpg\"} alt=\"flake salt\" onClick={imClicked} />\n          <figcaption>flake salt.</figcaption>\n        </figure>\n        <figure className=\"media-grid-item\">\n          <img src={process.env.PUBLIC_URL + \"/img/grey.jpg\"} alt=\"grey salt\" onClick={imClicked} />\n          <figcaption>grey salt.</figcaption>\n        </figure>\n        <figure className=\"media-grid-item\">\n          <img src={process.env.PUBLIC_URL + \"/img/hawaiian sea.jpg\"} alt=\"hawaiian salt\" onClick={imClicked} />\n          <figcaption>hawaiian sea salt.</figcaption>\n        </figure>\n        <figure className=\"media-grid-item\">\n          <img src={process.env.PUBLIC_URL + \"/img/black.jpg\"} alt=\"black salt\" onClick={imClicked} />\n          <figcaption>black salt.</figcaption>\n        </figure>\n      </div>\n      <p>\n        all images taken from <a href=\"https://seasalt.com/salt-101/gourmet-salt\">seasalt.com</a>.\n      </p>\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function VideoPage({ previewer }) {\n    let viClicked = (e) => {\n        previewer(e.target.src)\n    }\n\n    return (\n        <section>\n            <div className=\"video-grid\">\n                <figure className=\"media-grid-item\">\n                    <video src={process.env.PUBLIC_URL + \"/vid/chocknife.m4v\"} onClick={viClicked}></video>\n                    <figcaption>chocolate knife</figcaption>\n                </figure>\n                <figure className=\"media-grid-item\">\n                    <video src={process.env.PUBLIC_URL + \"/vid/candyknife.m4v\"} onClick={viClicked}></video>\n                    <figcaption>candy knife</figcaption>\n                </figure>\n                <figure className=\"media-grid-item\">\n                    <video src={process.env.PUBLIC_URL + \"/vid/seawaterknife.m4v\"} onClick={viClicked}></video>\n                    <figcaption>seawater knife</figcaption>\n                </figure>\n            </div>\n            <p>\n                video sources:\n      <ol>\n                    <li>\n                        <a href=\"https://www.youtube.com/watch?v=D2XNVFlh-DU\">\n                            sharpest chocolate kitchen knife in the world</a>\n                    </li>\n                    <li>\n                        <a href=\"https://www.youtube.com/watch?v=BNP15d-cgu8\">\n                            sharpest candy kitchen knife in the world</a>\n                    </li>\n                    <li>\n                        <a href=\"https://www.youtube.com/watch?v=pFG-nXUw6Ts\">\n                            sharpest seawater kitchen knife in the world</a>\n                    </li>\n                </ol>\n            </p>\n        </section>\n    )\n}\n","import React from 'react'\n\nexport default function TablePage() {\n    return (\n        <section>\n            <table>\n                <tbody>\n                    <tr>\n                        <td><b>salt name</b></td>\n                        <td><b>summary</b></td>\n                        <td><b>tasty rating</b></td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/Salt#Edible_salt\">table salt</a></td>\n                        <td>table salt is the most common kind of salt found in the average kitchen. it usually comes from salt\n              mines.</td>\n                        <td>★★★☆☆</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/Sea_salt\">sea salt</a></td>\n                        <td>sea salt is a broad term that generally refers to unrefined salt derived directly from a living ocean or\n              sea.</td>\n                        <td>★★★★☆</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/himalayan_salt\">himalayan pink salt</a></td>\n                        <td>often mined from the himalaya mountains in Pakistan from ancient sea beds that crystallized long ago,\n                        before modern pollutants existed, himalayan pink salt is believed to be one of the purest salts on earth.\n            </td>\n                        <td>★★★★★</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/Salt#Edible_salt\">table salt</a></td>\n                        <td>table salt is the most common kind of salt found in the average kitchen. it usually comes from salt\n              mines.</td>\n                        <td>★★★☆☆</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/Sea_salt\">sea salt</a></td>\n                        <td>sea salt is a broad term that generally refers to unrefined salt derived directly from a living ocean or\n              sea.</td>\n                        <td>★★★★☆</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/himalayan_salt\">himalayan pink salt</a></td>\n                        <td>often mined from the himalaya mountains in Pakistan from ancient sea beds that crystallized long ago,\n                        before modern pollutants existed, himalayan pink salt is believed to be one of the purest salts on earth.\n            </td>\n                        <td>★★★★★</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/Salt#Edible_salt\">table salt</a></td>\n                        <td>table salt is the most common kind of salt found in the average kitchen. it usually comes from salt\n              mines.</td>\n                        <td>★★★☆☆</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/Sea_salt\">sea salt</a></td>\n                        <td>sea salt is a broad term that generally refers to unrefined salt derived directly from a living ocean or\n              sea.</td>\n                        <td>★★★★☆</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/himalayan_salt\">himalayan pink salt</a></td>\n                        <td>often mined from the himalaya mountains in Pakistan from ancient sea beds that crystallized long ago,\n                        before modern pollutants existed, himalayan pink salt is believed to be one of the purest salts on earth.\n            </td>\n                        <td>★★★★★</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/Salt#Edible_salt\">table salt</a></td>\n                        <td>table salt is the most common kind of salt found in the average kitchen. it usually comes from salt\n              mines.</td>\n                        <td>★★★☆☆</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/Sea_salt\">sea salt</a></td>\n                        <td>sea salt is a broad term that generally refers to unrefined salt derived directly from a living ocean or\n              sea.</td>\n                        <td>★★★★☆</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/himalayan_salt\">himalayan pink salt</a></td>\n                        <td>often mined from the himalaya mountains in Pakistan from ancient sea beds that crystallized long ago,\n                        before modern pollutants existed, himalayan pink salt is believed to be one of the purest salts on earth.\n            </td>\n                        <td>★★★★★</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/Salt#Edible_salt\">table salt</a></td>\n                        <td>table salt is the most common kind of salt found in the average kitchen. it usually comes from salt\n              mines.</td>\n                        <td>★★★☆☆</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/Sea_salt\">sea salt</a></td>\n                        <td>sea salt is a broad term that generally refers to unrefined salt derived directly from a living ocean or\n              sea.</td>\n                        <td>★★★★☆</td>\n                    </tr>\n                    <tr>\n                        <td><a href=\"https://en.wikipedia.org/wiki/himalayan_salt\">himalayan pink salt</a></td>\n                        <td>often mined from the himalaya mountains in Pakistan from ancient sea beds that crystallized long ago,\n                        before modern pollutants existed, himalayan pink salt is believed to be one of the purest salts on earth.\n            </td>\n                        <td>★★★★★</td>\n                    </tr>\n                </tbody>\n            </table>\n            <p>\n                source for salt descriptions: <a href=\"https://seasalt.com/salt-101/gourmet-salt\">seasalt.com</a>.\n      </p>\n        </section>\n    )\n}\n","import React, { Component } from 'react'\nimport { LinkedComponent } from 'valuelink';\nimport { Input } from 'linked-controls';\n\nexport class EmailPage extends LinkedComponent {\n    constructor() {\n        super()\n\n        this.state = {\n            email: '',\n            status: ''\n        }\n    }\n\n    formSubmit = () => {\n        let validate_email = (eml) => {\n            var re = /\\S+@\\S+\\.\\S+/;\n            return re.test(eml);\n        }\n\n        var email = this.state.email\n        var status = validate_email(email)\n        console.log('validate: ', status, 'for', email)\n\n        let msg = status ? \"email successfully recorded\" : \"invalid email address\"\n        this.setState({\n            status: msg\n        })\n    }\n\n    render() {\n        const state$ = this.state$();\n\n        return (\n            <section>\n                <p>\n                    here is a demo of some basic client side form validation.\n            </p>\n                <form className=\"email-form\" onSubmit={this.formSubmit}>\n                    <fieldset>\n                        <legend>how do you like salt?</legend>\n                        <label>what is your email?\n            <Input type=\"text\" $value={state$.email} />\n                        </label>\n                    </fieldset>\n                    <input type=\"submit\" value=\"submit\" />\n                    <span id=\"validation-status\">{this.state.status}</span>\n                </form>\n            </section>\n        )\n    }\n}\n\nexport default EmailPage\n","import React, { Component } from 'react'\nimport './App.css';\nimport TabList from './comp/TabList';\nimport PageBody from './comp/PageBody';\nimport Previewer from './comp/Previewer';\n\nimport TextPage from './pages/TextPage';\nimport ImagePage from './pages/ImagePage';\nimport VideoPage from './pages/VideoPage';\nimport TablePage from './pages/TablePage';\nimport EmailPage from './pages/EmailPage';\n\nexport class App extends Component {\n  constructor() {\n    super()\n\n    let tabs = [\n      {\n        name: 'text',\n        body: <TextPage />\n      },\n      {\n        name: 'image',\n        body: <ImagePage />\n      },\n      {\n        name: 'video',\n        body: <VideoPage />\n      },\n      {\n        name: 'table',\n        body: <TablePage />\n      },\n      {\n        name: 'email',\n        body: <EmailPage />\n      }\n    ]\n\n    this.state = {\n      tabInfo: tabs,\n      activeTab: tabs[0].name,\n      previewUrl: '',\n      previewOpen: false,\n      bttVisible: false\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.onScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.onScroll)\n  }\n\n  onTabSelected = (tabName) => {\n    console.log(`tab selected: ${tabName}`)\n    this.setState({\n      activeTab: tabName\n    })\n  }\n\n  openPreviewer = (item) => {\n    console.log(`open previewer: ${item}`)\n    this.setState({\n      previewUrl: item,\n      previewOpen: true\n    })\n  }\n\n  closePreviewer = () => {\n    console.log('close previewer')\n    this.setState({\n      previewUrl: null,\n      previewOpen: false\n    })\n  }\n\n  getTab(name) {\n    return this.state.tabInfo.find(x => x.name === name)\n  }\n\n  onScroll = () => {\n    var root = document.documentElement\n    var maxScroll = root.scrollHeight - root.clientHeight\n\n    var scroll = root.scrollTop\n\n    var bttVis = false\n    if (scroll / maxScroll > 0.25) {\n      bttVis = true\n    }\n\n    this.setState({\n      bttVisible: bttVis\n    })\n  }\n\n  render() {\n    let page = this.getTab(this.state.activeTab)\n\n    let btt = (<aside class=\"btt\">\n      <a href=\"#\" onClick={() => document.documentElement.scrollTop = 0}>top</a></aside>)\n\n    return (\n      <div className=\"App\">\n        {/* <h1>Yum, Salt!</h1> */}\n        <TabList tabInfo={this.state.tabInfo} activeTab={this.state.activeTab} onSelected={this.onTabSelected} />\n        <PageBody content={page.body} previewer={this.openPreviewer} />\n        <Previewer mediaUrl={this.state.previewUrl} isOpen={this.state.previewOpen} onDismiss={this.closePreviewer} />\n        { this.state.bttVisible &&\n          btt\n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}